#!/usr/bin/env python3
"""
do something
"""
import argparse
import os
import sys
import re
import logging
import configparser
bin = os.path.abspath(os.path.dirname(__file__))
__author__='Ren Xue'
__mail__= 'xueren@genome.cn'
__date__= '2021年09月07日 星期二 16时16分33秒'

class myconf(configparser.ConfigParser):
    def __init__(self,defaults=None):
        configparser.ConfigParser.__init__(self,defaults=None,allow_no_value=True)
    def optionxform(self, optionstr):
        return optionstr

def read_config(file)
    config = myconf()
    config.read(file)
	template = {}
	shell={}
	if config.has_section("template"):
		for key, val in config.items("template"):
			new="@{0}@".format(key)
			template[new] = val
	if config.has_section("shell"):
		for key, val in config.items("shell"):
			new="~{{0}}".format(key)
			template[new] = val
	return template,shell

def main():
	parser=argparse.ArgumentParser(description=__doc__,formatter_class=argparse.RawDescriptionHelpFormatter,epilog='author:\t{0}\nmail:\t{1}\ndate:\t{2}\n'.format(__author__,__mail__,__date__))
	parser.add_argument('-i','--indir',help='indir',dest='indir',type=str,required=True)
	parser.add_argument('-c','--config',help='config',dest='config',type=str,required=True)
	parser.add_argument('-w','--workid',help='workid',dest='work',type=str,required=True)
	parser.add_argument('-s','--shell',help='shell',dest='shell',type=str,required=True)
	parser.add_argument('-t','--title',help='title',dest='title',type=str,required=True)
	parser.add_argument('-b','--bin',help='bin',dest='bin',type=str,required=True)
	args=parser.parse_args()
	##
	template,shell=read_config(args.config)
	shell["~{BIN}"]=os.path.abspath(args.bin)
	shell["~{bin}"]=os.path.abspath(args.bin)
	shell["~{title}"]=os.path.abspath(args.title)
	shell["~{reportdir}"]=os.path.abspath(args.indir)
	shell["~{workid}"]=os.path.abspath(args.workid)
	
	if template:
		for i in template:
			os.system("sed -i 's#{0}#{1}#g' {2}/template.md ".format(i,tempalte[i],args.indir))
	
	for j in shell:
		os.system("sed -i 's#{0}#{1}#g' {2}".format(i,tempalte[i],args.shell))

	






if __name__=="__main__":
	main()
